{"version":3,"sources":["assets/svg/btn_ShufflePlayback.svg","assets/svg/btn_Rewind.svg","assets/svg/btn_Play.svg","assets/svg/btn_pause.svg","assets/svg/btn_Fast.svg","assets/svg/btn_RepeatOne.svg","assets/svg/btn_RepeatAll.svg","assets/music/Ice_Cream.mp3","assets/music/Images_of_Tomorrow.mp3","constans/actions.js","constans/tracks.js","utils/index.js","components/Audio/Audio.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","PAUSE","REPEAT_ALL","tracks","name","source","iceCream","artist","imagesOfTomorrow","setTime","time","sec","Math","floor","ss","mm","String","padStart","Audio","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","audio","React","createRef","state","myTracks","slice","length","selectedTrack","status","repeat","currentTime","duration","percentage","play","bind","assertThisInitialized","pause","repeatAll","repeatOne","updateTime","rewind","fast","clickBar","next","current","addEventListener","prevProps","prevState","snapshot","console","log","removeEventListener","src","e","target","update","setState","objectSpread","toConsumableArray","pop","percent","clientX","offsetWidth","react_default","a","createElement","react","ref","className","onClick","style","width","left","shuffle","alt","Component","App","components_Audio_Audio","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea067691.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/btn_ShufflePlayback.0b297e0c.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_Rewind.9fa2e44f.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_Play.e2d60d81.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_pause.39a3f09c.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_Fast.9d632e81.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_RepeatOne.635bd6c4.svg\";","module.exports = __webpack_public_path__ + \"static/media/btn_RepeatAll.17b36287.svg\";","module.exports = __webpack_public_path__ + \"static/media/Ice_Cream.3e3ce561.mp3\";","module.exports = __webpack_public_path__ + \"static/media/Images_of_Tomorrow.f283d3f0.mp3\";","export const PLAY = 'play'\nexport const PAUSE = 'pause'\nexport const REPEAT_ALL = 'repeat all'\nexport const REPEAT_ONE = 'repeat one'","import iceCream from '../assets/music/Ice_Cream.mp3'\nimport imagesOfTomorrow from '../assets/music/Images_of_Tomorrow.mp3'\n\nconst tracks = [\n    {\n        name: 'Ice Cream',\n        source: iceCream,\n        artist: 'Joey Pecoraro'\n    },\n    {\n        name: 'Images of Tomorrow',\n        source: imagesOfTomorrow,\n        artist: 'Unicorn Heads'\n    }\n]\n\nexport default tracks","export function setTime(time) {\n    const sec = Math.floor(time);\n    const ss = sec % 60;\n    const mm = Math.floor(sec / 60);\n    return String(mm).padStart(2, '0') + ':' + String(ss).padStart(2, '0')\n}","import React, {Component, Fragment} from 'react'\nimport shuffle from \"../../assets/svg/btn_ShufflePlayback.svg\";\nimport rewind from \"../../assets/svg/btn_Rewind.svg\";\nimport play from \"../../assets/svg/btn_Play.svg\";\nimport pause from \"../../assets/svg/btn_pause.svg\"\nimport fast from \"../../assets/svg/btn_Fast.svg\";\nimport repeatOne from \"../../assets/svg/btn_RepeatOne.svg\";\nimport repeatAll from \"../../assets/svg/btn_RepeatAll.svg\"\nimport './Audio.css'\nimport {PLAY, PAUSE, REPEAT_ALL, REPEAT_ONE} from \"../../constans/actions\";\nimport tracks from \"../../constans/tracks\";\nimport {setTime} from '../../utils/index'\n\nclass Audio extends Component {\n    constructor(props) {\n        super(props);\n        this.audio = React.createRef();\n        this.state = {\n            myTracks: tracks.slice(0, tracks.length - 1),\n            selectedTrack: tracks[tracks.length - 1],\n            status: PAUSE,\n            repeat: REPEAT_ALL,\n            currentTime: 0,\n            duration: 0,\n            percentage: 0,\n        }\n        this.play = this.play.bind(this);\n        this.pause = this.pause.bind(this);\n        this.repeatAll = this.repeatAll.bind(this);\n        this.repeatOne = this.repeatOne.bind(this);\n        this.updateTime = this.updateTime.bind(this);\n        this.rewind = this.rewind.bind(this);\n        this.fast = this.fast.bind(this);\n        this.clickBar = this.clickBar.bind(this);\n        this.next = this.next.bind(this);\n    }\n\n    componentDidMount() {\n        this.audio.current.addEventListener('timeupdate', this.updateTime);\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        // if (this.state.selectedTrack !== prevState.selectedTrack) {\n        //     let track = tracks.filter(item => item.name === this.state.selectedTrack)[0]\n        //\n        //     if (track) {\n        //         this.audio.current.src = track.source;\n        //     }\n        // }\n\n        if (this.state.myTracks.length !== prevState.myTracks.length) {\n            console.log(this.state)\n        }\n\n        if (this.state.status !== prevState.status) {\n            switch (this.state.status) {\n                case PAUSE:\n                    this.audio.current.pause();\n                    break;\n                case PLAY:\n                    this.audio.current.play();\n                    break;\n                default:\n                    break;\n            }\n        }\n    }\n\n    componentWillUnmount() {\n        this.audio.current.removeEventListener('timeupdate', this.updateTime)\n        this.audio.current.src = '';\n    }\n\n    updateTime(e) {\n        const currentTime = e.target.currentTime;\n        const duration = e.target.duration;\n\n        if (currentTime >= duration) {\n            // after change tracks, IF expression alwarys return false because of duration could be NaN\n            this.next();\n        } else {\n            let update = {\n                currentTime: currentTime,\n                duration: duration,\n                percentage: Math.floor((currentTime / duration) * 1000) / 10\n            }\n\n            this.setState({\n                ...this.state,\n                ...update\n            })\n        }\n    }\n\n    rewind() {\n        this.audio.current.currentTime -= 5;\n    }\n\n    fast() {\n        this.audio.current.currentTime += 5;\n    }\n\n    play() {\n        this.setState({\n            ...this.state,\n            status: PLAY\n        })\n    }\n\n    pause() {\n        this.setState({\n            ...this.state,\n            status: PAUSE\n        })\n    }\n\n    next() {\n        if (this.state.myTracks.length > 0) {\n            const myTracks = [...this.state.myTracks];\n            const selectedTrack = myTracks.pop();\n            this.setState({\n                ...this.state,\n                myTracks: myTracks,\n                selectedTrack: selectedTrack\n            })\n            this.audio.current.play();\n        } else {\n            // if (this.state.repeat === REPEAT_ALL) {\n            //     const myTracks = [...tracks];\n            //     const selectedTrack = myTracks.pop();\n            //     this.setState({\n            //         ...this.state,\n            //         myTracks: myTracks,\n            //         selectedTrack: selectedTrack\n            //     })\n            // } else {\n                this.setState({\n                    ...this.state,\n                    status: PAUSE\n                })\n            // }\n        }\n\n    }\n\n    repeatAll() {\n        this.setState({\n            ...this.state,\n            repeat: REPEAT_ALL,\n\n        })\n    }\n\n    repeatOne() {\n        this.setState({\n            ...this.state,\n            repeat: REPEAT_ONE\n        })\n    }\n\n    clickBar(e) {\n        const percent = (e.clientX - 30) / e.target.offsetWidth;\n        this.audio.current.currentTime = percent * this.state.duration;\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <audio ref={this.audio} src={this.state.selectedTrack.source}></audio>\n                <div className=\"song-name\">{this.state.selectedTrack.name}</div>\n                <div className=\"artist\">{this.state.selectedTrack.artist}</div>\n\n                <div className=\"progress\" onClick={this.clickBar}>\n                    <div className=\"total\">\n                        <div className=\"past-bar\" style={{width: this.state.percentage + '%'}}></div>\n                        <div className=\"past-point\" style={{left: this.state.percentage + '%'}}></div>\n                    </div>\n                </div>\n                <div className=\"time\">\n                    <div className=\"left\">{setTime(this.state.currentTime)}</div>\n                    <div className=\"right\">{setTime(this.state.duration)}</div>\n                </div>\n\n                <div className=\"control\">\n                    <img src={shuffle} alt=\"shuffle\"/>\n                    <img src={rewind} alt=\"rewind\" onClick={this.rewind}/>\n                    {\n                        this.state.status === PLAY ?\n                            <img src={pause} alt=\"pause\" onClick={this.pause}/> :\n                            <img src={play} alt=\"play\" onClick={this.play}/>\n                    }\n                    <img src={fast} alt=\"fast\" onClick={this.fast}/>\n                    {\n                        this.state.repeat === REPEAT_ALL ?\n                            <img src={repeatAll} alt=\"repeat all\" onClick={this.repeatOne}/> :\n                            <img src={repeatOne} alt=\"repeat one\" onClick={this.repeatAll}/>\n\n                    }\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default Audio","import React from 'react';\nimport './App.css';\nimport Audio from './components/Audio/Audio'\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <div className=\"view\"></div>\n            <div className=\"top-part\">\n                <div className=\"window\"></div>\n            </div>\n            <div className=\"bottom-part\">\n                <Audio></Audio>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}